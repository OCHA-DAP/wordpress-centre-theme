name: Run gulp tasks

# Controls when the action will run
on:
  push:
    # On which branches
    branches:
      - gulp-4
#      - dev
#      - prod
    # On which tags
#    tags:
#      - *

# Variables
env:
  dest_path: '/public_html/wp-content/themes/uncode-child'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Job name
  build:
    # Runner name
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#          ref: ${{ github.event.pull_request.head.ref }}

      # Sets up node
      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16

      # Build
      - name: Build
        run: |
          npm ci
          gulp build

      # Commit
      - name: Commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "github-actions"
          git status
          git add --force build/*
          git status
          git commit -m "update gulp output files"
        shell: bash

      # Push
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          branch: ${{ github.ref }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

  # Job name
  rclone-dev:
    # Runner name
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/gulp-4'

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # rclone
      - name: Copy files on dev
        uses: wei/rclone@v1
        env:
          RCLONE_CONFIG_HDX_TYPE: ${{ secrets.RCLONE_CONFIG_HDX_TYPE }}
          RCLONE_CONFIG_HDX_HOST: ${{ secrets.RCLONE_CONFIG_HDX_HOST }}
          RCLONE_CONFIG_HDX_USER: ${{ secrets.RCLONE_CONFIG_HDX_USER_DEV }}
          RCLONE_CONFIG_HDX_PASS: ${{ secrets.RCLONE_CONFIG_HDX_PASS_DEV }}
        with:
          args: copy build HDX:${{ env.dest_path }}

  # Job name
  rclone-prod:
    # Runner name
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/prod'

    steps:
      # rclone
      - name: Copy files on prod
        run: |
          echo "I'm on production!"
#        uses: wei/rclone@v1
#        env:
#          RCLONE_CONFIG_HDX_TYPE: ${{ secrets.RCLONE_CONFIG_HDX_TYPE }}
#          RCLONE_CONFIG_HDX_HOST: ${{ secrets.RCLONE_CONFIG_HDX_HOST }}
#          RCLONE_CONFIG_HDX_USER: ${{ secrets.RCLONE_CONFIG_HDX_USER_PROD }}
#          RCLONE_CONFIG_HDX_PASS: ${{ secrets.RCLONE_CONFIG_HDX_PASS_PROD }}
#        with:
#          args: copy build hdx:${{ env.dest_path }}
